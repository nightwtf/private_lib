local lib = {}

function lib:CreateWindow(name)
    name = name or "<b>INTERN</b> Library"

    for i,v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v.Name == "intern_hub" then
            v:Destroy()
        end
    end

    local intern_hub = Instance.new("ScreenGui")
    local main_holder = Instance.new("Frame")
    local main_bg = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local texture = Instance.new("ImageLabel")
    local smoke = Instance.new("ImageLabel")
    local ui_name = Instance.new("TextLabel")
    local UIGradient = Instance.new("UIGradient")
    local smoke1 = Instance.new("ImageLabel")
    local tab = Instance.new("ScrollingFrame")
    local ListLayout = Instance.new("UIListLayout")

    intern_hub.Name = "intern_hub"
    intern_hub.Parent = game:GetService("CoreGui")
    intern_hub.ResetOnSpawn = false

    main_holder.Name = "main_holder"
    main_holder.Parent = intern_hub
    main_holder.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    main_holder.BackgroundTransparency = 1.000
    main_holder.BorderSizePixel = 0
    main_holder.Position = UDim2.new(0.5, -200, 0.5, -150)
    main_holder.Size = UDim2.new(0, 400, 0, 300)

    main_bg.Name = "main_bg"
    main_bg.Parent = main_holder
    main_bg.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    main_bg.BorderColor3 = Color3.fromRGB(27, 42, 53)
    main_bg.BorderSizePixel = 0
    main_bg.ClipsDescendants = true
    main_bg.Position = UDim2.new(0.5, -200, 0.5, -150)
    main_bg.Size = UDim2.new(0, 400, 0, 300)

    UICorner.CornerRadius = UDim.new(0, 3)
    UICorner.Parent = main_bg

    texture.Name = "texture"
    texture.Parent = main_bg
    texture.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    texture.BackgroundTransparency = 1.000
    texture.BorderSizePixel = 0
    texture.Size = UDim2.new(1, 0, 1, 0)
    texture.ZIndex = 0
    texture.Image = "rbxassetid://7032373975"
    texture.ImageTransparency = 0.750

    smoke.Name = "smoke"
    smoke.Parent = main_bg
    smoke.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    smoke.BackgroundTransparency = 1.000
    smoke.BorderColor3 = Color3.fromRGB(27, 42, 53)
    smoke.Position = UDim2.new(-0.87604171, 0, -0.567592561, 0)
    smoke.Size = UDim2.new(1.3834002, 0, 1.3834002, 0)
    smoke.Image = "rbxassetid://1853193216"
    smoke.ImageTransparency = 0.980

    ui_name.Name = "ui_name"
    ui_name.Parent = main_bg
    ui_name.AnchorPoint = Vector2.new(0.5, 0.5)
    ui_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ui_name.BackgroundTransparency = 1.000
    ui_name.BorderSizePixel = 0
    ui_name.Position = UDim2.new(0.157270208, 0, 0.119999997, -17)
    ui_name.Size = UDim2.new(0, 125, 0, 35)
    ui_name.Font = Enum.Font.Gotham
    ui_name.Text = ""..tostring(name)
    ui_name.TextColor3 = Color3.fromRGB(117, 117, 117)
    ui_name.TextSize = 14.000
    ui_name.RichText = true

    UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
    UIGradient.Offset = Vector2.new(0.200000003, 0.400000006)
    UIGradient.Rotation = 270
    UIGradient.Parent = ui_name

    smoke1.Name = "smoke1"
    smoke1.Parent = main_bg
    smoke1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    smoke1.BackgroundTransparency = 1.000
    smoke1.BorderColor3 = Color3.fromRGB(27, 42, 53)
    smoke1.Position = UDim2.new(0.57396549, 0, -0.0463237613, 0)
    smoke1.Size = UDim2.new(1.53799033, 0, 1.53799045, 0)
    smoke1.Image = "rbxassetid://1853193216"
    smoke1.ImageTransparency = 0.980

    tab.Name = "tab"
    tab.Parent = main_bg
    tab.Active = true
    tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tab.BackgroundTransparency = 1.000
    tab.BorderSizePixel = 0
    tab.Position = UDim2.new(0.5, -195, 0.122, 0)
    tab.Size = UDim2.new(0, 390, 0, 263)
    tab.ScrollBarThickness = 0

    ListLayout.Name = "ListLayout"
    ListLayout.Parent = tab
    ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ListLayout.Padding = UDim.new(0, 6)

    tab.CanvasSize = UDim2.new(0,0,0,tab.ListLayout.AbsoluteContentSize.Y)
	tab.ChildAdded:Connect(function()
		tab.CanvasSize = UDim2.new(0,0,0,tab.ListLayout.AbsoluteContentSize.Y + 45 + tab.ListLayout.Padding.Offset)
	end) 

    local function QIOPIQ_fake_script() -- top_frame.DragSript 
		local script = Instance.new('LocalScript', main_holder)

		local UserInputService = game:GetService("UserInputService")

		local gui = script.Parent

		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		gui.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = gui.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		gui.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)
	end
	coroutine.wrap(QIOPIQ_fake_script)() 
    
    local types = {}

	local c = 0

    function types:Button(text, callback)
        callback = callback or function() end
		text = text or "Button"
		c = c + 1

        local Button = Instance.new("TextButton")
        local ButtonCorner = Instance.new("UICorner")
        local ButtonTitle = Instance.new("TextLabel")

        Button.Name = "Button"
        Button.Parent = tab
        Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        Button.Size = UDim2.new(0, 375, 0, 42)
        Button.AutoButtonColor = false
        Button.Font = Enum.Font.SourceSans
        Button.Text = ""
        Button.TextColor3 = Color3.fromRGB(0, 0, 0)
        Button.TextSize = 14.000
        Button.LayoutOrder = c

        ButtonCorner.CornerRadius = UDim.new(0, 5)
        ButtonCorner.Name = "ButtonCorner"
        ButtonCorner.Parent = Button

        ButtonTitle.Name = "ButtonTitle"
        ButtonTitle.Parent = Button
        ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ButtonTitle.BackgroundTransparency = 1.000
        ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
        ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
        ButtonTitle.Font = Enum.Font.Gotham
        ButtonTitle.Text = text
        ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ButtonTitle.TextSize = 14.000
        ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

        local function QESXMTV_fake_script()
            local script = Instance.new('LocalScript', Button)
        
            script.Parent.MouseEnter:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(38,38,38)
                }):Play()
            end)
            script.Parent.MouseLeave:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(34,34,34)
                }):Play()
            end)
        end
        coroutine.wrap(QESXMTV_fake_script)()

        Button.MouseButton1Down:Connect(function()
            pcall(callback)
        end)
    end

    function types:Section(text)
        text = text or "Section"
        c = c + 1
        
        local Section = Instance.new("TextLabel")
        local UIGradient = Instance.new("UIGradient")
    
        Section.Name = "Section"
        Section.Parent = tab
        Section.AnchorPoint = Vector2.new(0.5, 0.5)
        Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Section.BackgroundTransparency = 1.000
        Section.BorderSizePixel = 0
        Section.LayoutOrder = c
        Section.Position = UDim2.new(0.157270208, 0, 0.119999997, -17)
        Section.Size = UDim2.new(0, 125, 0, 20)
        Section.Font = Enum.Font.GothamBold
        Section.Text = text
        Section.TextColor3 = Color3.fromRGB(150, 150, 150)
        Section.TextSize = 14.000
    
        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
        UIGradient.Offset = Vector2.new(0.200000003, 0.400000006)
        UIGradient.Rotation = 270
        UIGradient.Parent = Section
    end

    function types:Toggle(text, callback)
        local enabled = false
        
        c = c + 1
        
        text = text or "Toggle"
        callback = callback or function() end
        
        local Toggle = Instance.new("TextButton")
        local ToggleCorner = Instance.new("UICorner")
        local ToggleTitle = Instance.new("TextLabel")
        local FrameToggle1 = Instance.new("Frame")
        local FrameToggle1Corner = Instance.new("UICorner")
        local UIStrokeToggle = Instance.new("UIStroke")
    
        Toggle.Name = "Toggle"
        Toggle.Parent = tab
        Toggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        Toggle.Position = UDim2.new(0.215625003, 0, 0.446271926, 0)
        Toggle.Size = UDim2.new(0, 375, 0, 42)
        Toggle.AutoButtonColor = false
        Toggle.Font = Enum.Font.SourceSans
        Toggle.Text = ""
        Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
        Toggle.TextSize = 14.000
        Toggle.LayoutOrder = c
    
        ToggleCorner.CornerRadius = UDim.new(0, 5)
        ToggleCorner.Name = "ToggleCorner"
        ToggleCorner.Parent = Toggle
    
        ToggleTitle.Name = "ToggleTitle"
        ToggleTitle.Parent = Toggle
        ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ToggleTitle.BackgroundTransparency = 1.000
        ToggleTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
        ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
        ToggleTitle.Font = Enum.Font.Gotham
        ToggleTitle.Text = text
        ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ToggleTitle.TextSize = 14.000
        ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
    
        FrameToggle1.Name = "FrameToggle1"
        FrameToggle1.Parent = Toggle
        FrameToggle1.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
        FrameToggle1.Position = UDim2.new(0.902170777, 0, 0.5, -9)
        FrameToggle1.Size = UDim2.new(0, 20, 0, 18)
        
        UIStrokeToggle.Parent = FrameToggle1
        UIStrokeToggle.Thickness = 1
        UIStrokeToggle.Color = Color3.fromRGB(52, 52, 52)
        UIStrokeToggle.ApplyStrokeMode = "Contextual"
    
        FrameToggle1Corner.CornerRadius = UDim.new(0, 3)
        FrameToggle1Corner.Name = "FrameToggle1Corner"
        FrameToggle1Corner.Parent = FrameToggle1
        
        local function GKQTG_fake_script()
            local script = Instance.new('LocalScript', Toggle)
    
            script.Parent.MouseEnter:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(38,38,38)
                }):Play()
            end)
            script.Parent.MouseLeave:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                }):Play()
            end)
        end
        coroutine.wrap(GKQTG_fake_script)()
        
        local function Fire()
            enabled = not enabled
            FrameToggle1.BackgroundColor3 = enabled and Color3.fromRGB(44, 120, 224) or Color3.fromRGB(37, 37, 37)
            pcall(callback, enabled)
        end
    
        Toggle.MouseButton1Click:Connect(Fire)
    end

    function types:Bind()
        c = c + 1
        
        local Bind = Instance.new("TextButton")
        local ButtonCorner = Instance.new("UICorner")
        local ButtonTitle = Instance.new("TextLabel")
    
        Bind.Name = "Bind"
        Bind.Parent = tab
        Bind.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        Bind.Size = UDim2.new(0, 375, 0, 42)
        Bind.AutoButtonColor = false
        Bind.Font = Enum.Font.SourceSans
        Bind.Text = ""
        Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
        Bind.TextSize = 14.000
        Bind.LayoutOrder = c
    
        ButtonCorner.CornerRadius = UDim.new(0, 5)
        ButtonCorner.Name = "ButtonCorner"
        ButtonCorner.Parent = Bind
    
        ButtonTitle.Name = "ButtonTitle"
        ButtonTitle.Parent = Bind
        ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ButtonTitle.BackgroundTransparency = 1.000
        ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
        ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
        ButtonTitle.Font = Enum.Font.Gotham
        ButtonTitle.Text = "Bind: "
        ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        ButtonTitle.TextSize = 14.000
        ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
        
        local function PACSJVV_fake_script() -- example_bind.LocalScript 
            local script = Instance.new('LocalScript', Bind)
    
            script.Parent.MouseEnter:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(42,42,42)
                }):Play()
            end)
            script.Parent.MouseLeave:Connect(function()
                game:GetService("TweenService"):Create(script.Parent, TweenInfo.new(0.15), {
                    BackgroundColor3 = Color3.fromRGB(38, 38, 38)
                }):Play()
            end)
        end
        coroutine.wrap(PACSJVV_fake_script)()
        
        local keybindThing
        local keybind_listening = false
        local UIS = game:GetService("UserInputService")
    
        Bind.Activated:Connect(function()
            keybind_listening = true
            ButtonTitle.Text = "Bind: . . ."
        end)
    
        function GetStringForKeyCode(keyCode)
            keyCode = tostring(keyCode)
            keyCode = string.sub(keyCode, string.len("Enum.KeyCode._"))
            ButtonTitle.Text = "Bind: "..keyCode
        end
    
        UIS.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                if keybind_listening == true then
                    keybindThing = UIS:GetKeysPressed()
                    GetStringForKeyCode(input.KeyCode)
                    keybind_listening = false
                end
            end
        end)
    end

    return types
end

return lib
