local lib = {}

function lib:Init(name)
    name = name or "mindhook v1"

    for i,v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v.Name == "mindhook" then
            v:Destroy()
        end
    end

    local mindhook = Instance.new("ScreenGui")
    local bg = Instance.new("Frame")
    local top_frame = Instance.new("Frame")
    local name_label = Instance.new("TextLabel")
    local tabs_frame = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local tab1 = Instance.new("Frame")
    local holder = Instance.new("Frame")

    mindhook.Name = "mindhook"
    mindhook.Parent = game:GetService("CoreGui")
    mindhook.ResetOnSpawn = false

    bg.Name = "bg"
    bg.Parent = mindhook
    bg.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
    bg.BorderColor3 = Color3.fromRGB(12, 12, 12)
    bg.Position = UDim2.new(0.5, -175, 0.5, -200)
    bg.Size = UDim2.new(0, 350, 0, 400)

    top_frame.Name = "top_frame"
    top_frame.Parent = bg
    top_frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    top_frame.BorderColor3 = Color3.fromRGB(12, 12, 12)
    top_frame.BorderSizePixel = 0
    top_frame.Position = UDim2.new(0.5, -175, 0.5, -200)
    top_frame.Size = UDim2.new(0, 350, 0, 25)

    name_label.Name = "name_label"
    name_label.Parent = top_frame
    name_label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    name_label.BackgroundTransparency = 1.000
    name_label.BorderSizePixel = 0
    name_label.Position = UDim2.new(0.0199999996, 0, 0, 0)
    name_label.Size = UDim2.new(0.408571422, 200, 1, 0)
    name_label.Font = Enum.Font.Code
    name_label.Text = name
    name_label.TextColor3 = Color3.fromRGB(255, 255, 255)
    name_label.TextSize = 14.000
    name_label.TextStrokeTransparency = 0.700
    name_label.TextXAlignment = Enum.TextXAlignment.Left

    tabs_frame.Name = "tabs_frame"
    tabs_frame.Parent = bg
    tabs_frame.BackgroundColor3 = Color3.fromRGB(36, 36, 36)
    tabs_frame.BorderColor3 = Color3.fromRGB(50, 50, 50)
    tabs_frame.Position = UDim2.new(0.5, -175, 0.5625, -200)
    tabs_frame.Size = UDim2.new(0, 350, 0, 25)

    holder.Name = "holder"
    holder.Parent = tabs_frame
    holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    holder.BackgroundTransparency = 1.000
    holder.BorderSizePixel = 0
    holder.LayoutOrder = -1

    UIListLayout.Parent = tabs_frame
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    UIListLayout.Padding = UDim.new(0, 5)

    tab1.Name = "container"
    tab1.Parent = bg
    tab1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tab1.BackgroundTransparency = 1.000
    tab1.BorderSizePixel = 0
    tab1.Position = UDim2.new(0, 0, 0.125, 0)
    tab1.Size = UDim2.new(0, 350, 0, 350)

    local dragger = {}; do
        local mouse        = game:GetService("Players").LocalPlayer:GetMouse();
        local inputService = game:GetService('UserInputService');
        local heartbeat    = game:GetService("RunService").Heartbeat;
        -- // credits to Ririchi / Inori for this cute drag function :)
        function dragger.new(frame)
            local s, event = pcall(function()
                return frame.MouseEnter
            end)
    
            if s then
                frame.Active = true;
                
                event:connect(function()
                    local input = frame.InputBegan:connect(function(key)
                        if key.UserInputType == Enum.UserInputType.MouseButton1 then
                            local objectPosition = Vector2.new(mouse.X - frame.AbsolutePosition.X, mouse.Y - frame.AbsolutePosition.Y);
                            while heartbeat:wait() and inputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) do
                                pcall(function()
                                    frame:TweenPosition(UDim2.new(0, mouse.X - objectPosition.X + (frame.Size.X.Offset * frame.AnchorPoint.X), 0, mouse.Y - objectPosition.Y + (frame.Size.Y.Offset * frame.AnchorPoint.Y)), 'Out', 'Linear', 0.1, true);
                                end)
                            end
                        end
                    end)
    
                    local leave;
                    leave = frame.MouseLeave:connect(function()
                        input:disconnect();
                        leave:disconnect();
                    end)
                end)
            end
        end
    end

    dragger.new(bg)

    local firstTab = false
    local selectedTab = nil
    local items = {}

    local c = 0

    function items:Tab(name)
        name = name or "New Tab"
        if not type(name) == "string" then name = "New Tab" end
        c = c + 1

        local main_tab = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local holder = Instance.new("Frame")
        local tab_button = Instance.new("TextButton")

        main_tab.Name = name
        main_tab.Parent = tab1
        main_tab.Active = true
        main_tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        main_tab.BackgroundTransparency = 1.000
        main_tab.BorderSizePixel = 0
        main_tab.Position = UDim2.new(0.5, -173,0.5, -165)
        main_tab.Size = UDim2.new(0, 347, 0, 330)
        main_tab.BottomImage = ""
        main_tab.MidImage = ""
        main_tab.ScrollBarThickness = 0
        main_tab.TopImage = ""
        main_tab.LayoutOrder = c

        UIListLayout.Parent = main_tab
        UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)

        main_tab.CanvasSize = UDim2.new(0,0,0,main_tab.UIListLayout.AbsoluteContentSize.Y)
        main_tab.ChildAdded:Connect(function()
            main_tab.CanvasSize = UDim2.new(0,0,0,main_tab.UIListLayout.AbsoluteContentSize.Y + 25 + main_tab.UIListLayout.Padding.Offset)
        end)

        holder.Name = "holder"
        holder.Parent = main_tab
        holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        holder.BackgroundTransparency = 1.000
        holder.BorderSizePixel = 0
        holder.LayoutOrder = -1

        tab_button.Name = "tab_button"
        tab_button.Parent = tabs_frame
        tab_button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tab_button.BackgroundTransparency = 1.000
        tab_button.BorderSizePixel = 0
        tab_button.Size = UDim2.new(0, 40, 1, 0)
        tab_button.Font = Enum.Font.Code
        tab_button.Text = name
        tab_button.TextColor3 = Color3.fromRGB(255, 255, 255)
        tab_button.TextSize = 14.000
        tab_button.TextStrokeTransparency = 0.700

        for i,v in pairs(tab1:GetChildren()) do
            v.Visible = false
        end

        if firstTab then
            selectedTab = tab_button
            firstTab = false
        else
            tab_button.TextColor3 = Color3.fromRGB(145, 145, 145)
        end

        local tween = nil
        tab_button.MouseEnter:Connect(function()
            if selectedTab ~= tab_button then
                if tween ~= nil then tween:Cancel() end
                tween = game:GetService("TweenService"):Create(tab_button, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(255,255,255)}, true)
                tween:Play()
                wait(0.2)
                tween = nil
            end
        end)

        tab_button.MouseLeave:Connect(function()
            if selectedTab ~= tab_button then
                if tween ~= nil then tween:Cancel() end
                tween = game:GetService("TweenService"):Create(tab_button, TweenInfo.new(0.2), {TextColor3 = Color3.fromRGB(145, 145, 145)}, true)
                tween:Play()
                wait(0.2)
                tween = nil
            end
        end)

        tab_button.MouseButton1Click:Connect(function()
            for i,v in pairs(tabs_frame:GetChildren()) do
                if v ~= tab_button and v.ClassName ~= "UIListLayout" and v.Name ~= "holder" then
                    v.TextColor3 = Color3.fromRGB(145, 145, 145)
                end
            end
            for i,v in pairs(tabs_frame:GetChildren()) do
                if v == tab_button and v.ClassName ~= "UIListLayout" and v.Name ~= "holder" then
                    v.TextColor3 = Color3.fromRGB(255,135,255)
                end
            end
            for i,v in pairs(tab1:GetChildren()) do
                v.Visible = false
            end
            main_tab.Visible = true
            selectedTab = tab_button
        end)

        local textsize = game:GetService("TextService"):GetTextSize(tab_button.Text, tab_button.TextSize, tab_button.Font, Vector2.new(math.huge, math.huge))
        tab_button.Size = UDim2.new(0, textsize.X + 5, 1, 0)

        local items = {}
        function items:Section(name)
            name = name or "Section"
            c = c + 1

            local section_frame = Instance.new("Frame")
            local section_name = Instance.new("TextLabel")
            local section_divider = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            local holder = Instance.new("Frame")
            
            section_frame.Name = "section_frame"
            section_frame.Parent = main_tab
            section_frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
            section_frame.BorderColor3 = Color3.fromRGB(12, 12, 12)
            section_frame.Position = UDim2.new(0.5, -170, 0.0151515156, 0)
            section_frame.Size = UDim2.new(0, 340, 0, 40)
            section_frame.LayoutOrder = c
            
            section_name.Name = "section_name"
            section_name.Parent = section_frame
            section_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            section_name.BackgroundTransparency = 1.000
            section_name.BorderSizePixel = 0
            section_name.Position = UDim2.new(0.0199999996, 0, 0, 0)
            section_name.Size = UDim2.new(0, 328, 0, 25)
            section_name.Font = Enum.Font.Code
            section_name.Text = name
            section_name.TextColor3 = Color3.fromRGB(255, 255, 255)
            section_name.TextSize = 14.000
            section_name.TextStrokeTransparency = 0.700
            section_name.TextXAlignment = Enum.TextXAlignment.Left
            section_name.LayoutOrder = -1
            
            section_divider.Name = "section_divider"
            section_divider.Parent = section_frame
            section_divider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            section_divider.BorderSizePixel = 0
            section_divider.Position = UDim2.new(0.5, -165, 0.230000004, 0)
            section_divider.Size = UDim2.new(0, 330, 0, 1)
            section_divider.LayoutOrder = 0
            
            UIListLayout.Parent = section_frame
            UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 3)
            
            holder.Name = "holder"
            holder.Parent = section_frame
            holder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            holder.BackgroundTransparency = 1.000
            holder.BorderSizePixel = 0
            holder.LayoutOrder = -2
            holder.Size = UDim2.new(0, 0, 0, 0)

            section_frame.ChildAdded:Connect(function(child)
                if string.find(child.ClassName, "UI") then return end
                repeat wait() until child.Size ~= nil and child.Size ~= UDim2.new(0,0,0,0)
                section_frame.Size = UDim2.new(0,340,0,UIListLayout.AbsoluteContentSize.Y + 3)
            end)

            local items = {}
            function items:Toggle(name, default, callback)
                name = name or "New Toggle"
                if not type(name) == "string" then name = "New Toggle" end
                default = default or false
                if not type(default) == "boolean" then default = false end
                callback = callback or function() end
                if not type(callback) == "function" then callback = function() end end
                c = c + 1
                
                local toggle_frame = Instance.new("Frame")
                local toggle_name = Instance.new("TextLabel")
                local toggle_button = Instance.new("TextButton")
                local toggle_but_frame = Instance.new("Frame")
                
                toggle_frame.Name = "toggle_frame"
                toggle_frame.Parent = section_frame
                toggle_frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                toggle_frame.BackgroundTransparency = 1.000
                toggle_frame.BorderSizePixel = 0
                toggle_frame.Position = UDim2.new(0.0199999642, 0, 0.30578512, 0)
                toggle_frame.Size = UDim2.new(0, 328, 0, 25)
                toggle_frame.LayoutOrder = c
                
                toggle_name.Name = "toggle_name"
                toggle_name.Parent = toggle_frame
                toggle_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                toggle_name.BackgroundTransparency = 1.000
                toggle_name.BorderSizePixel = 0
                toggle_name.Position = UDim2.new(0, 0, 0.5, -12)
                toggle_name.Size = UDim2.new(0, 318, 0, 25)
                toggle_name.Font = Enum.Font.Code
                toggle_name.Text = name
                toggle_name.TextColor3 = Color3.fromRGB(145, 145, 145)
                toggle_name.TextSize = 14.000
                toggle_name.TextStrokeTransparency = 0.700
                toggle_name.TextXAlignment = Enum.TextXAlignment.Left
                
                toggle_button.Name = "toggle_button"
                toggle_button.Parent = toggle_frame
                toggle_button.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                toggle_button.BackgroundTransparency = 1.000
                toggle_button.BorderColor3 = Color3.fromRGB(10, 10, 10)
                toggle_button.BorderSizePixel = 0
                toggle_button.Size = UDim2.new(1, 0, 1, 0)
                toggle_button.Font = Enum.Font.SourceSans
                toggle_button.Text = ""
                toggle_button.TextColor3 = Color3.fromRGB(0, 0, 0)
                toggle_button.TextSize = 14.000
                
                toggle_but_frame.Name = "toggle_but_frame"
                toggle_but_frame.Parent = toggle_frame
                toggle_but_frame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                toggle_but_frame.BorderColor3 = Color3.fromRGB(10, 10, 10)
                toggle_but_frame.Position = UDim2.new(1, -14, 0.5, -7)
                toggle_but_frame.Size = UDim2.new(0, 14, 0, 14)

                if default == true then
                    toggle_but_frame.BackgroundColor3 = Color3.fromRGB(255,135,255)
                end

                local cooldown = false
                toggle_button.MouseButton1Click:Connect(function()
                    if cooldown == false then
                        cooldown = true
                        if default == true then
                            game:GetService("TweenService"):Create(toggle_but_frame, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(22,22,22)}):Play()
                            default = false
                            pcall(callback, false)
                        else
                            game:GetService("TweenService"):Create(toggle_but_frame, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(255,135,255)}):Play()
                            default = true
                            pcall(callback, true)
                        end
                        wait(0.2)
                        cooldown = false
                    end
                end)

                function items:Button(name, callback)
                    name = name or "New Button"
                    if not type(name) == "string" then name = "New Button" end
                    callback = callback or function() end
                    if not type(callback) == "function" then callback = function() end end

                    c = c + 1

                    local button_frame = Instance.new("Frame")
                    local button_name = Instance.new("TextLabel")
                    local button = Instance.new("TextButton")
                    local button_inside = Instance.new("Frame")

                    button_frame.Name = "button_frame"
                    button_frame.Parent = section_frame
                    button_frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    button_frame.BackgroundTransparency = 1.000
                    button_frame.BorderSizePixel = 0
                    button_frame.Position = UDim2.new(0.0199999642, 0, 0.30578512, 0)
                    button_frame.Size = UDim2.new(0, 328, 0, 20)
                    button_frame.LayoutOrder = c

                    button_name.Name = "button_name"
                    button_name.Parent = button_frame
                    button_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    button_name.BackgroundTransparency = 1.000
                    button_name.BorderSizePixel = 0
                    button_name.Size = UDim2.new(1, 0, 1, 0)
                    button_name.ZIndex = 2
                    button_name.Font = Enum.Font.Code
                    button_name.Text = name
                    button_name.TextColor3 = Color3.fromRGB(145, 145, 145)
                    button_name.TextSize = 14.000
                    button_name.TextStrokeTransparency = 0.700

                    button.Name = "button"
                    button.Parent = button_frame
                    button.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                    button.BackgroundTransparency = 1.000
                    button.BorderColor3 = Color3.fromRGB(10, 10, 10)
                    button.BorderSizePixel = 0
                    button.Size = UDim2.new(1, 0, 1, 0)
                    button.ZIndex = 2
                    button.Font = Enum.Font.SourceSans
                    button.Text = ""
                    button.TextColor3 = Color3.fromRGB(0, 0, 0)
                    button.TextSize = 14.000

                    button_inside.Name = "button_inside"
                    button_inside.Parent = button_frame
                    button_inside.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                    button_inside.BorderColor3 = Color3.fromRGB(10, 10, 10)
                    button_inside.Size = UDim2.new(1, 0, 1, 0)

                    button.MouseButton1Down:Connect(function()
                        pcall(callback)
                    end)

                    function items:Bind(name, default, callback)
                        name = name or "New Keybind"
                        if not type(name) == "string" then name = "New Keybind" end
                        default = default or "E"
                        if not type(default) == "string" or Enum.KeyCode[default] == nil then default = "E" end
                        callback = callback or function() end
                        if not type(callback) == "function" then callback = function() end end

                        c = c + 1

                        local keybind_frame = Instance.new("Frame")
                        local keybind_name = Instance.new("TextLabel")
                        local keybind_button = Instance.new("TextButton")
                        local bind_text = Instance.new("TextLabel")
                        
                        keybind_frame.Name = name
                        keybind_frame.Parent = section_frame
                        keybind_frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        keybind_frame.BackgroundTransparency = 1.000
                        keybind_frame.BorderSizePixel = 0
                        keybind_frame.Position = UDim2.new(0.0199999642, 0, 0.30578512, 0)
                        keybind_frame.Size = UDim2.new(0, 328, 0, 25)
                        keybind_frame.LayoutOrder = c
                        
                        keybind_name.Name = "keybind_name"
                        keybind_name.Parent = keybind_frame
                        keybind_name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        keybind_name.BackgroundTransparency = 1.000
                        keybind_name.BorderSizePixel = 0
                        keybind_name.Position = UDim2.new(0, 0, 0.5, -12)
                        keybind_name.Size = UDim2.new(0, 318, 0, 25)
                        keybind_name.Font = Enum.Font.Code
                        keybind_name.Text = name
                        keybind_name.TextColor3 = Color3.fromRGB(145, 145, 145)
                        keybind_name.TextSize = 14.000
                        keybind_name.TextStrokeTransparency = 0.700
                        keybind_name.TextXAlignment = Enum.TextXAlignment.Left
                        
                        keybind_button.Name = "keybind_button"
                        keybind_button.Parent = keybind_frame
                        keybind_button.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                        keybind_button.BackgroundTransparency = 1.000
                        keybind_button.BorderColor3 = Color3.fromRGB(10, 10, 10)
                        keybind_button.BorderSizePixel = 0
                        keybind_button.Size = UDim2.new(1, 0, 1, 0)
                        keybind_button.Font = Enum.Font.SourceSans
                        keybind_button.Text = ""
                        keybind_button.TextColor3 = Color3.fromRGB(0, 0, 0)
                        keybind_button.TextSize = 14.000
                        
                        bind_text.Name = "bind_text"
                        bind_text.Parent = keybind_frame
                        bind_text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        bind_text.BackgroundTransparency = 1.000
                        bind_text.BorderSizePixel = 0
                        bind_text.Position = UDim2.new(1, -318, 0.5, -12)
                        bind_text.Size = UDim2.new(0, 318, 0, 25)
                        bind_text.Font = Enum.Font.Code
                        bind_text.Text = default
                        bind_text.TextColor3 = Color3.fromRGB(145, 145, 145)
                        bind_text.TextSize = 14.000
                        bind_text.TextStrokeTransparency = 0.700
                        bind_text.TextXAlignment = Enum.TextXAlignment.Right

                        local cooldown = false
                        local key = default
                        local allowKeyChange = false
                        keybind_button.MouseButton1Click:Connect(function()
                            if cooldown == false then
                                cooldown = true
                                for i = 1, #bind_text.Text do
                                   bind_text.Text = string.sub(bind_text.Text, 1, #bind_text.Text - 1)
                                   wait(0.05)
                                end
                                for i = 1, 3 do
                                    bind_text.Text = string.sub("...", 1, i)
                                    wait(0.05)
                                end
                                allowKeyChange = true
                            end
                        end)

                        local UIS = game:GetService("UserInputService")

                        UIS.InputBegan:Connect(function(input, Processed)
                            if allowKeyChange then
                                allowKeyChange = false
                                for i = 1, 3 do
                                    bind_text.Text = string.sub("...", 1, 3 - i)
                                    wait(0.05)
                                end
                                for i = 1, #input.KeyCode.Name do
                                    bind_text.Text = string.sub(input.KeyCode.Name, 1, i)
                                    wait(0.05)
                                end
                                key = input.KeyCode.Name
                                wait(0.1)
                                cooldown = false
                            else
                                if input.KeyCode.Name == key then
                                    pcall(callback)
                                end
                            end
                        end)
                    end
                end
            end
            return items
        end
        return items
    end
    return items
end

return lib
